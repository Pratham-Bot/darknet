#version 460 core

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

// Input buffer binding points
layout(std430, binding = 0) buffer A {
    float a[];
};

layout(std430, binding = 1) buffer B {
    float b[];
};

layout(std430, binding = 2) buffer Output {
    float output[];
};

uniform int M; // Rows of A
uniform int N; // Columns of B
uniform int K; // Columns of A and Rows of B

void main() {
    int row = int(gl_GlobalInvocationID.y);
    int col = int(gl_GlobalInvocationID.x);

    float value = 0.0;

    for (int k = 0; k < K; ++k) {
        int aIndex = row * K + k;
        int bIndex = k * N + col;
        value += a[aIndex] * b[bIndex];
    }

    output[row * N + col] = value;
}

